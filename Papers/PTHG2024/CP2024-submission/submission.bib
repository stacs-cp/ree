@article{akgun2022conjure,
  title={Conjure: Automatic generation of constraint models from problem specifications},
  author={Akg{\"u}n, {\"O}zg{\"u}r and Frisch, Alan M and Gent, Ian P and Jefferson, Christopher and Miguel, Ian and Nightingale, Peter},
  journal={Artificial Intelligence},
  volume={310},
  pages={103751},
  year={2022},
  doi={10.1016/j.artint.2022.103751},
  publisher={Elsevier}
}

@inproceedings{semerath2017graph,
  title={Graph constraint evaluation over partial models by constraint rewriting},
  author={Semer{\'a}th, Oszk{\'a}r and Varr{\'o}, D{\'a}niel},
  booktitle={Theory and Practice of Model Transformation: 10th International Conference, ICMT 2017, Held as Part of STAF 2017, Marburg, Germany, July 17-18, 2017, Proceedings 10},
  pages={138--154},
  year={2017},
  organization={Springer}
}

@article{vilgertshofer2017using,
  title={Using graph rewriting methods for the semi-automatic generation of parametric infrastructure models},
  author={Vilgertshofer, Simon and Borrmann, Andr{\'e}},
  journal={Advanced Engineering Informatics},
  volume={33},
  pages={502--515},
  year={2017},
  publisher={Elsevier}
}

@article{asztalos2013formal,
  title={Formal specification and analysis of functional properties of graph rewriting-based model transformation},
  author={Asztalos, M{\'a}rk and Lengyel, L{\'a}szl{\'o} and Levendovszky, Tihamer},
  journal={Software Testing, Verification and Reliability},
  volume={23},
  number={5},
  pages={405--435},
  year={2013},
  publisher={Wiley Online Library}
}

@inproceedings{saxena2010mde,
  title={MDE-based approach for generalizing design space exploration},
  author={Saxena, Tripti and Karsai, Gabor},
  booktitle={Model Driven Engineering Languages and Systems: 13th International Conference, MODELS 2010, Oslo, Norway, October 3-8, 2010, Proceedings, Part I 13},
  pages={46--60},
  year={2010},
  organization={Springer}
}

@inproceedings{saxena2010towards,
  title={Towards a generic design space exploration framework},
  author={Saxena, Tripti and Karsai, Gabor},
  booktitle={2010 10th IEEE International Conference on Computer and Information Technology},
  pages={1940--1947},
  year={2010},
  organization={IEEE}
}

@inproceedings{denil2014search,
  title={Search-based model optimization using model transformations},
  author={Denil, Joachim and Jukss, Maris and Verbrugge, Clark and Vangheluwe, Hans},
  booktitle={System Analysis and Modeling: Models and Reusability: 8th International Conference, SAM 2014, Valencia, Spain, September 29-30, 2014. Proceedings 8},
  pages={80--95},
  year={2014},
  organization={Springer}
}

@inproceedings{weber2022tool,
  title={Tool Support for Functional Graph Rewriting with Persistent Data Structures -- {GrapeVine}},
  author={Weber, Jens H},
  booktitle={International Conference on Graph Transformation},
  pages={195--206},
  doi={10.1007/978-3-031-09843-7_11},
  year={2022},
  series={LNCS},
  volume={13349},
  publisher={Springer}
}

@article{hu2020machine,
  title={Machine learning approaches for efficient design space exploration of application-specific NoCs},
  author={Hu, Yong and Mettler, Marcel and Mueller-Gritschneder, Daniel and Wild, Thomas and Herkersdorf, Andreas and Schlichtmann, Ulf},
  journal={ACM Transactions on Design Automation of Electronic Systems (TODAES)},
  volume={25},
  number={5},
  pages={1--27},
  year={2020},
  doi={10.1145/3403584},
  publisher={ACM New York, NY, USA}
}

@InProceedings{   10.1007/978-3-030-51372-6_17,
  author        = "Bruggink, H. J. Sander and K{\"o}nig, Barbara and Matjeka,
                  Marleen and Nolte, Dennis and Stoltenow, Lara",
  editor        = "Gadducci, Fabio and Kehrer, Timo",
  title         = "A Flexible and Easy-to-Use Library for the Rapid
                  Development of Graph Tools in Java",
  booktitle     = "Graph Transformation",
  year          = "2020",
  publisher     = "Springer International Publishing",
  address       = "Cham",
  pages         = "297--306",
  abstract      = "We present a programming library for the rapid development
                  of graph tools, with applications in graph transformation
                  and related fields. Features include working with graphs,
                  graph morphisms, basic categorical constructions such as
                  computing pushouts and pushout complements or enumerating
                  all morphisms with certain properties, but also
                  applications such as executing graph transformation steps.
                  Additionally, we offer graphical user interface widgets for
                  visualization and manipulation of graphs, morphisms and
                  categorical diagrams.",
  doi={10.1007/978-3-030-51372-6_17},
  isbn          = "978-3-030-51372-6"
}

@InProceedings{   10.1007/978-3-031-09843-7_11,
  author        = "Weber, Jens H.",
  editor        = "Behr, Nicolas and Str{\"u}ber, Daniel",
  title         = "Tool Support for Functional Graph Rewriting with
                  Persistent Data Structures - GrapeVine",
  booktitle     = "Graph Transformation",
  year          = "2022",
  publisher     = "Springer International Publishing",
  address       = "Cham",
  pages         = "195--206",
  abstract      = "Existing graph transformation (GT) tools treat graphs as
                  ephemeral data structures, i.e., the successful application
                  of a GT rule to a graph G rewrites that graph to produce a
                  modified graph {\$}{\$}G'{\$}{\$}G{\textasciiacutex}. The
                  original graph G is lost during that update. In contrast to
                  ephemeral data structures, persistent data structures
                  preserve access to all previous versions when data is
                  modified and fully persistent data structures even allow
                  all previous versions to be modified. In earlier work, we
                  introduced the Graph Rewriting and Persistence Engine Grape
                  as a tool for specifying and executing transformations on
                  large-scale graphs and integrated it with a computational
                  notebook platform (GrapePress). While the term
                  ``persistence'' has been in the tool's acronym from the
                  start, it was chosen to indicate that graphs were
                  maintained in a database with transactional support. Until
                  now, Grape (and GrapePress) treated graphs as ephemeral
                  data structures, i.e., previous graph versions were not
                  retained upon modification. This paper presents a major
                  revision of the tool (called GrapeVine) to support
                  functional graph rewriting based on a fully persistent data
                  structure.",
  doi={10.1007/978-3-031-09843-7_11},
  isbn          = "978-3-031-09843-7"
}

@Misc{force_graph,
  author = {Vasco Asturiano},
  title = {Force-directed graph rendered on {HTML5} canvas},
  url = {https://github.com/vasturiano/force-graph},
  version = {v1.43.5},
  year = {2024}
}

@article{kahani2019survey,
  title={Survey and classification of model transformation tools},
  author={Kahani, Nafiseh and Bagherzadeh, Mojtaba and Cordy, James R and Dingel, Juergen and Varr{\'o}, Daniel},
  journal={Software \& Systems Modeling},
  volume={18},
  pages={2361--2397},
  year={2019},
  doi={10.1007/s10270-018-0665-6},
  publisher={Springer}
}

@inproceedings{taentzer2005model,
  title={Model transformation by graph transformation: A comparative study},
  author={Taentzer, Gabriele and Ehrig, Karsten and Guerra, Esther and De Lara, Juan and Lengyel, Laszlo and Levendovszky, Tihamer and Prange, Ulrike and Varr{\'o}, D{\'a}niel and Varr{\'o}-Gyapay, Szilvia},
  booktitle={Model Transformation in Practice (MTiP'05), Montego Bay, Jamaica},
  pages={17},
  url={https://hdl.handle.net/10486/665862},
  year={2005}
}

@Article{         browne2012survey,
  title         = {A survey of {Monte} {Carlo} tree search methods},
  author        = {Browne, Cameron B. and Powley, Edward and Whitehouse,
                  Daniel and Lucas, Simon M. and Cowling, Peter I. and
                  Rohlfshagen, Philipp and Tavener, Stephen and Perez, Diego
                  and Samothrakis, Spyridon and Colton, Simon},
  journal       = {IEEE Transactions on Computational Intelligence and AI in
                  games},
  volume        = {4},
  number        = {1},
  pages         = {1--43},
  year          = {2012},
  doi           = {10.1109/TCIAIG.2012.2186810}
}

@Article{         freuder2018:progress,
  title         = {Progress towards the {Holy} {Grail}},
  author        = {Freuder, Eugene C.},
  journal       = {Constraints},
  volume        = {23},
  number        = {2},
  pages         = {158--171},
  year          = {2018},
  doi           = {10.1007/s10601-017-9275-0},
  orig-publisher= {Springer}
}

@InProceedings{   Akgun2021:towards,
  author        = {Akgün, Özgür and Alan M. Frisch and Ian P. Gent and
                  Christopher Jefferson and Ian Miguel and Peter Nightingale
                  and András Z. Salamon},
  title         = {Towards Reformulating Essence Specifications for
                  Robustness},
  orig-booktitle= {ModRef 2021: Proceedings of the 20th workshop on
                  Constraint Modelling and Reformulation},
  booktitle     = {ModRef},
  year          = 2021,
  doi           = {10.48550/arXiv.2111.00821}
}

@Article{         marriott2008:design,
  author        = {Marriott, Kim and Nethercote, Nicholas and Rafeh, Reza and
                  Stuckey, Peter J. and de la Banda, Maria Garcia and
                  Wallace, Mark},
  journal       = {Constraints},
  volume        = {13},
  number        = {3},
  orig-publisher= {Springer},
  pages         = {229--267},
  title         = {The Design of the {Zinc} Modelling Language},
  doi           = {10.1007/s10601-008-9041-4},
  year          = {2008}
}

@InProceedings{   Nethercote2007:minizinc,
  author        = {Nethercote, Nicholas and Stuckey, Peter J. and Becket,
                  Ralph and Brand, Sebastian and Duck, Gregory J. and Tack,
                  Guido},
  booktitle     = {CP},
  doi           = {10.1007/978-3-540-74970-7_38},
  pages         = {529--543},
  series        = {LNCS 4741},
  title         = {{MiniZinc}: Towards a Standard {CP} Modelling Language},
  year          = {2007}
}

@Article{         frisch2008:essence,
  author        = {Frisch, Alan M. and Harvey, Warwick and Jefferson, Chris
                  and Mart\'{\i}nez-Hern\'{a}ndez, Bernadette and Miguel, Ian},
  doi           = {10.1007/s10601-008-9047-y},
  journal       = {Constraints},
  number        = {3},
  pages         = {268--306},
  title         = {{Essence}: A constraint language for specifying
                  combinatorial problems},
  volume        = {13},
  year          = {2008}
}

@InProceedings{   charnley2006:automatic,
  title         = {Automatic generation of implied constraints},
  author        = {Charnley, John and Colton, Simon and Miguel, Ian},
  booktitle     = {ECAI},
  url           = {https://ebooks.iospress.nl/volumearticle/2653},
  orig-series   = {Frontiers in Artificial Intelligence and Applications},
  orig-volume   = {141},
  pages         = {73--77},
  year          = {2006}
}

@InProceedings{   colton2001:constraint,
  title         = {Constraint generation via automated theory formation},
  author        = {Colton, Simon and Miguel, Ian},
  booktitle     = {CP},
  doi           = {10.1007/3-540-45578-7_42},
  pages         = {575--579},
  series        = {LNCS 2239},
  year          = {2001},
  orig-publisher= {Springer}
}

@InProceedings{   frisch2003:cgrass,
  title         = {{CGRASS}: A system for transforming constraint
                  satisfaction problems},
  author        = {Frisch, Alan M. and Miguel, Ian and Walsh, Toby},
  booktitle     = {Recent Advances in Constraints},
  doi           = {10.1007/3-540-36607-5_2},
  pages         = {15--30},
  series        = {LNCS 2627},
  year          = {2003}
}

@Book{            biere2021handbook,
  title         = {Handbook of Satisfiability},
  author        = {Biere, Armin and Heule, Marijn and van Maaren, Hans and
                  Walsh, Toby},
  volume        = {326},
  year          = {2021},
  publisher     = {IOS Press},
  address       = {Amsterdam}
}

@Book{            rossi2006handbook,
  title         = {Handbook of constraint programming},
  author        = {Rossi, Francesca and Van Beek, Peter and Walsh, Toby},
  year          = {2006},
  publisher     = {Elsevier}
}

@Article{         savilerow,
  author        = {Peter Nightingale and {\"O}zg{\"u}r Akg{\"u}n and Ian P.
                  Gent and Christopher Jefferson and Ian Miguel and Patrick
                  Spracklen},
  journal       = {Artificial Intelligence},
  pages         = {35--61},
  title         = {{Automatically improving constraint models in {Savile
                  Row}}},
  volume        = {251},
  year          = {2017},
  doi           = {10.1016/j.artint.2017.07.001}
}

@Article{         essence-prime-description-orig,
  author        = {Peter Nightingale and Andrea Rendl},
  title         = {Essence' Description},
  journal       = {CoRR},
  volume        = {abs/1601.02865},
  year          = {2016},
  eprinttype    = {arXiv},
  eprint        = {1601.02865}
}

@Misc{            essence-prime-description,
  author        = {Peter Nightingale and Andrea Rendl},
  title         = {Essence' Description},
  url           = {https://arxiv.org/abs/1601.02865},
  year          = {2016},
  howpublished  = {arXiv}
}

@InProceedings{   cadical,
  author        = {Armin Biere and Katalin Fazekas and Mathias Fleury and
                  Maximillian Heisinger},
  title         = {{CaDiCaL}, {Kissat}, {Paracooba}, {Plingeling} and
                  {Treengeling} Entering the {SAT Competition 2020}},
  pages         = {50--53},
  orig-editor   = {Tomas Balyo and Nils Froleyks and Marijn Heule and Markus
                  Iser and Matti J{\"a}rvisalo and Martin Suda},
  booktitle     = {Proceedings of {SAT} {Competition} 2020 -- Solver and
                  Benchmark Descriptions},
  volume        = {B-2020-1},
  series        = {Department of Computer Science Report Series B},
  organization  = {University of Helsinki},
  year          = 2020,
  orig-note     = {\url{http://hdl.handle.net/10138/318754}},
  url           = {https://hdl.handle.net/10138/318754}
}

@InProceedings{   Gent2006:minion,
  author        = {Ian P. Gent and Christopher Jefferson and Ian Miguel},
  title         = {{Minion}: A Fast Scalable Constraint Solver},
  booktitle     = {{ECAI}},
  year          = {2006},
  pages         = {98--102},
  orig-publisher= {IOS Press},
  url           = {http://ebooks.iospress.nl/volumearticle/2658}
}

@Misc{            sr-manual,
  title         = {{Savile Row} Manual},
  author        = {Peter Nightingale},
  year          = {2021},
  howpublished  = {arXiv},
  doi           = {10.48550/arXiv.2201.03472}
}

@Article{         Akgun2022:Conjure,
  title         = {Conjure: Automatic Generation of Constraint Models from
                  Problem Specifications},
  journal       = {Artificial Intelligence},
  volume        = {310},
  pages         = {103751},
  year          = {2022},
  issn          = {0004-3702},
  doi           = {10.1016/j.artint.2022.103751},
  author        = {Akg{\"u}n, {\"O}zg{\"u}r and Alan M. Frisch and Ian P. Gent and
                  Christopher Jefferson and Ian Miguel and Peter Nightingale}
}

@InProceedings{   Frisch2005:essence,
  author        = {Alan M. Frisch and Matthew Grum and Jefferson, Chris and
                  Bernadette Mart{\'\i}nez Hern{\'a}ndez and Ian Miguel},
  booktitle     = {ModRef 2005: Proceedings of the 4th International Workshop
                  on Modelling and Reformulating Constraint Satisfaction
                  Problems},
  pages         = {73--88},
  title         = {The essence of {Essence}: A language for specifying
                  combinatorial problems},
  year          = {2005}
}

@Article{         Mitchell2008:expressive,
  abstract      = {Development of languages for specifying or modelling
                  problems is an important direction in constraint modelling.
                  To provide greater abstraction and modelling convenience,
                  these languages are becoming more syntactically rich,
                  leading to a variety of questions about their expressive
                  power. In this paper, we consider the expressiveness of
                  Essence, a specification language with a rich variety of
                  syntactic features. We identify natural fragments of
                  Essence that capture the complexity classes P, NP, all
                  levels $\Sigma_i^p$ of the polynomial-time hierarchy, and
                  all levels k-NEXP of the nondeterministic exponential-time
                  hierarchy. The union of these classes is the very large
                  complexity class ELEMENTARY. One goal is to begin to
                  understand which features play a role in the high
                  expressive power of the language and which are purely
                  features of convenience. We also discuss the formalization
                  of arithmetic in Essence and related languages, a notion of
                  capturing NP-search which is slightly different than that
                  of capturing NP, and a conjectured limit to the expressive
                  power of Essence. Our study is an application of
                  descriptive complexity theory, and illustrates the value of
                  taking a logic-based view of modelling and specification
                  languages.},
  author        = {Mitchell, David G. and Ternovska, Eugenia},
  doi           = {10.1007/s10601-008-9050-3},
  issn          = {1572-9354},
  journal       = {Constraints},
  number        = {3},
  pages         = {343--384},
  title         = {Expressive power and abstraction in {Essence}},
  volume        = {13},
  year          = {2008}
}

@InProceedings{   Attieh2019:Athanor,
  author        = {Attieh, Saad and Dang, Nguyen and Jefferson, Christopher
                  and Miguel, Ian and Nightingale, Peter},
  title         = {Athanor: High-Level Local Search over Abstract Constraint
                  Specifications in Essence},
  year          = {2019},
  isbn          = {9780999241141},
  orig-publisher= {AAAI Press},
  abstract      = {This paper presents ATHANOR, a novel local search solver
                  that operates on abstract constraint specifications of
                  combinatorial problems in the ESSENCE language. It is
                  unique in that it operates directly on the high level,
                  nested types in ESSENCE, such as set of partitions or
                  multiset of sequences, without refining such types into low
                  level representations. This approach has two main
                  advantages. First, the structure present in the high level
                  types allows high quality neighbourhoods for local search
                  to be automatically derived. Second, it allows ATHANOR to
                  scale much better than solvers that operate on the
                  equivalent, but much larger, low-level representations. The
                  paper details how ATHANOR operates, covering incremental
                  evaluation, dynamic unrolling of quantified expressions and
                  neighbourhood construction. A series of case studies show
                  the performance of ATHANOR, benchmarked against several
                  local search solvers on a range of problem classes.},
  orig-booktitle= {Proceedings of the 28th International Joint Conference on
                  Artificial Intelligence},
  pages         = {1056--1063},
  doi           = {10.24963/ijcai.2019/148},
  location      = {Macao, China},
  booktitle     = {IJCAI}
}

@Article{         SPRACKLEN2023103915,
  title         = {Automated streamliner portfolios for constraint
                  satisfaction problems},
  journal       = {Artificial Intelligence},
  volume        = {319},
  pages         = {103915},
  year          = {2023},
  issn          = {0004-3702},
  doi           = {https://doi.org/10.1016/j.artint.2023.103915},
  orig-url      = {https://www.sciencedirect.com/science/article/pii/S0004370223000619},
  author        = {Patrick Spracklen and Nguyen Dang and Özgür Akgün and
                  Ian Miguel},
  keywords      = {Constraint programming, Constraint modelling, Constraint
                  satisfaction problem, Algorithm selection},
  abstract      = {Constraint Programming (CP) is a powerful technique for
                  solving large-scale combinatorial problems. Solving a
                  problem proceeds in two distinct phases: modelling and
                  solving. Effective modelling has a huge impact on the
                  performance of the solving process. Even with the advance
                  of modern automated modelling tools, search spaces involved
                  can be so vast that problems can still be difficult to
                  solve. To further constrain the model, a more aggressive
                  step that can be taken is the addition of streamliner
                  constraints, which are not guaranteed to be sound but are
                  designed to focus effort on a highly restricted but
                  promising portion of the search space. Previously,
                  producing effective streamlined models was a manual,
                  difficult and time-consuming task. This paper presents a
                  completely automated process to the generation, search and
                  selection of streamliner portfolios to produce a
                  substantial reduction in search effort across a diverse
                  range of problems. The results demonstrate a marked
                  improvement in performance for both Chuffed, a CP solver
                  with clause learning, and lingeling, a modern SAT solver.}
}

@Misc{            csplib:url,
  title         = {{CSPLib}: A problem library for constraints},
  author        = {Jefferson, Christopher and Akgün, Özgür},
  url           = {https://www.csplib.org/}
}

@InProceedings{   Bessiere2013:constraint,
  title         = {Constraint acquisition via partial queries},
  author        = {Bessiere, Christian and Coletta, Remi and Hebrard,
                  Emmanuel and Katsirelos, George and Lazaar, Nadjib and
                  Narodytska, Nina and Quimper, Claude-Guy and Walsh, Toby},
  booktitle     = {IJCAI},
  pages         = {475--481},
  year          = {2013},
  url           = {https://www.ijcai.org/Proceedings/13/Papers/078.pdf}
}

@InProceedings{   Bessiere2007:learning,
  title         = {Learning Implied Global Constraints},
  author        = {Bessiere, Christian and Coletta, Remi and Petit, Thierry},
  booktitle     = {IJCAI},
  pages         = {44--49},
  url           = {https://www.ijcai.org/Proceedings/07/Papers/005.pdf},
  year          = {2007}
}

@Article{         Bessiere2017:constraint,
  title         = "Constraint Acquisition",
  journal       = "Artificial Intelligence",
  volume        = "244",
  pages         = "315--342",
  year          = "2017",
  author        = "Christian Bessiere and Frédéric Koriche and Nadjib
                  Lazaar and Barry O'Sullivan",
  doi           = {10.1016/j.artint.2015.08.001}
}

@InProceedings{   Arcangioli2016:multiple,
  title         = {Multiple Constraint Aquisition},
  author        = {Arcangioli, Robin and Bessiere, Christian and Lazaar,
                  Nadjib},
  booktitle     = {IJCAI},
  pages         = {698--704},
  url           = {https://www.ijcai.org/Proceedings/16/Papers/105.pdf},
  year          = {2016}
}

@InProceedings{   Rozemberczki2020:characteristic,
  title         = {Characteristic functions on graphs: Birds of a feather,
                  from statistical descriptors to parametric models},
  author        = {Rozemberczki, Benedek and Sarkar, Rik},
  orig-booktitle= {CIKM'20: Proceedings of the 29th ACM international
                  conference on information \& knowledge management},
  booktitle     = {CIKM},
  pages         = {1325--1334},
  doi           = {10.1145/3340531.3411866},
  year          = {2020}
}

@InProceedings{   Nightingale2014:automatically,
  title         = {Automatically Improving Constraint Models in {Savile Row}
                  through Associative-Commutative Common Subexpression
                  Elimination},
  author        = {Nightingale, Peter and Akg{\"u}n, {\"O}zg{\"u}r and Gent,
                  Ian P. and Jefferson, Christopher and Miguel, Ian},
  booktitle     = {{CP}},
  pages         = {590--605},
  year          = {2014},
  orig-publisher= {Springer},
  doi           = {10.1007/978-3-319-10428-7_43}
}

@InProceedings{   Nightingale2015:automatically,
  author        = {Peter Nightingale and Patrick Spracklen and Ian Miguel},
  title         = {Automatically Improving {SAT} Encoding of Constraint
                  Problems through Common Subexpression Elimination in
                  {Savile Row}},
  booktitle     = {{CP}},
  pages         = {330--340},
  year          = {2015},
  orig-publisher= {Springer},
  doi           = {10.1007/978-3-319-23219-5_23}
}

@InProceedings{   Beldiceanu2012:model,
  author        = {Beldiceanu, Nicolas and Simonis, Helmut},
  booktitle     = {{CP}},
  pages         = {141--157},
  title         = {A Model Seeker: Extracting Global Constraint Models from
                  Positive Examples},
  doi           = {10.1007/978-3-642-33558-7_13},
  year          = {2012}
}

@InProceedings{   Bessiere2014:boosting,
  title         = {Boosting Constraint Acquisition via Generalization
                  Queries},
  author        = {Bessiere, Christian and Coletta, Remi and Daoudi,
                  Abderrazak and Lazaar, Nadjib},
  booktitle     = {ECAI},
  pages         = {99--104},
  doi           = {10.3233/978-1-61499-419-0-99},
  year          = {2014}
}

@Article{         Rafeh2016:linzinc,
  title         = {{LinZinc}: A Library for Linearizing {Zinc} Models},
  author        = {Rafeh, Reza and Jaberi, Negar},
  journal       = {Iranian Journal of Science and Technology, Transactions of
                  Electrical Engineering},
  volume        = {40},
  number        = {1},
  pages         = {63--73},
  year          = {2016},
  doi           = {10.1007/s40998-016-0005-1},
  orig-publisher= {Springer}
}

@PhDThesis{       Rendl2010:thesis,
  author        = {Andrea Rendl},
  title         = {Effective Compilation of Constraint Models},
  school        = {University of St Andrews},
  url           = {http://hdl.handle.net/10023/973},
  year          = {2010}
}

@InProceedings{   Shchekotykhin2009:argumentation,
  author        = {K. Shchekotykhin and G. Friedrich},
  booktitle     = {ICDM},
  orig-booktitle= {ICDM'09: Ninth IEEE International Conference on Data
                  Mining},
  title         = {Argumentation Based Constraint Acquisition},
  year          = {2009},
  pages         = {476--482},
  doi           = {10.1109/ICDM.2009.62}
}

@InProceedings{   Kiziltan2016:constraint,
  title         = {Constraint Detection in Natural Language Problem
                  Descriptions},
  author        = {Kiziltan, Zeynep and Lippi, Marco and Torroni, Paolo},
  booktitle     = {IJCAI},
  pages         = {744--750},
  url           = {https://www.ijcai.org/Proceedings/16/Papers/111.pdf},
  year          = {2016}
}

@InProceedings{   DeRaedt2018:learning,
  title         = {Learning Constraints From Examples},
  author        = {De Raedt, Luc and Passerini, Andrea and Teso, Stefano},
  booktitle     = {AAAI},
  pages         = {7965--7970},
  doi           = {10.1609/aaai.v32i1.12217},
  year          = {2018}
}

@Article{         Hnich2003:function,
  author        = {Hnich, Brahim},
  journal       = {AI Communications},
  number        = {2},
  pages         = {131--132},
  title         = {Function variables for constraint programming},
  volume        = {16},
  url={https://content.iospress.com/articles/ai-communications/aic281},
  year          = {2003}
}

@InProceedings{   Leo2013:globalizing,
  title         = {Globalizing constraint models},
  author        = {Leo, Kevin and Mears, Christopher and Tack, Guido and De
                  La Banda, Maria Garcia},
  booktitle     = {CP},
  pages         = {432--447},
  doi           = {10.1007/978-3-642-40627-0_34},
  year          = {2013}
}

@InProceedings{   Little2003:using,
  author        = {Little, James and Gebruers, Cormac and Bridge, Derek G.
                  and Freuder, Eugene C.},
  booktitle     = {{CP}},
  pages         = {983},
  title         = {Using Case-Based Reasoning to Write Constraint Programs},
  doi           = {10.1007/978-3-540-45193-8_107},
  year          = {2003}
}

@TechReport{      Mills1999:eacl,
  author        = {Mills, Patrick and Tsang, Edward and Williams, Richard and
                  Ford, John and Borrett, James},
  institution   = {Department of Computer Science, University of Essex},
  number        = {CSM-324},
  title         = {{EaCL} 1.5: An {Easy} abstract {Constraint} optimisation
                  {Programming} {Language}},
  year          = {1999}
}

@InProceedings{   Frisch2005:rules,
  abstract      = {Many and diverse combinatorial problems have been solved
                  successfully using finite-domain constraint programming.
                  However, to apply constraint programming to a particular
                  domain, the problem must first be modelled as a constraint
                  satisfaction or optimisation problem. Since constraints
                  provide a rich language, typically many alternative models
                  exist. Formulating a good model therefore requires a great
                  deal of expertise. This paper describes CONJURE, a system
                  that refines a specification of a problem in the abstract
                  constraint specification language ESSENCE into a set of
                  alternative constraint models. Refinement is compositional:
                  alternative constraint models are generated by composing
                  refinements of the components of the specification.
                  Experimental results demonstrate that CONJURE is able to
                  generate a variety of models for practical problems from
                  their ESSENCE specifications.},
  author        = {Frisch, Alan M. and Jefferson, Christopher and
                  Mart\'{\i}nez-Hern\'{a}ndez, Bernadette and Miguel, Ian},
  booktitle     = {IJCAI},
  orig-editor   = {Kaelbling, Leslie Pack and Saffiotti, Alessandro},
  isbn          = {0938075934},
  pages         = {109--116},
  orig-publisher= {Professional Book Center},
  title         = {The Rules of Constraint Modelling},
  type          = {NonPeerReviewed},
  url           = {https://www.ijcai.org/Proceedings/05/Papers/1667.pdf},
  year          = {2005}
}

@Article{         plump2017imperative,
  title         = {From imperative to rule-based graph programs},
  author        = {Plump, Detlef},
  journal       = {Journal of Logical and Algebraic Methods in Programming},
  volume        = {88},
  pages         = {154--173},
  year          = {2017},
  doi           = {10.1016/j.jlamp.2016.12.001}
}

@Article{         taentzer2010algebraic,
  title         = {What algebraic graph transformations can do for model
                  transformations},
  author        = {Taentzer, Gabriele},
  journal       = {Electronic Communications of the EASST},
  volume        = {30},
  year          = {2010}
}

@InProceedings{   habel2001computational,
  title         = {Computational completeness of programming languages based
                  on graph transformation},
  author        = {Habel, Annegret and Plump, Detlef},
  booktitle     = {FoSSaCS},
  series        = {LNCS 2030},
  pages         = {230--245},
  year          = {2001},
  doi           = {https://doi.org/10.1007/3-540-45315-6_15}
}

@InProceedings{   campbell2020improved,
  title         = {The Improved {GP} 2 Compiler},
  author        = {Campbell, Graham and Romo, Jack and Plump, Detlef},
  booktitle     = {GCM},
  orig-booktitle= {Proceedings of the Eleventh International Workshop on Graph
                  Computation Models},
  pages         = {206--217},
  url           = {https://pure.york.ac.uk/portal/files/71537390/Campbell_Romo_Plump.GCM.20_1.pdf},
  year          = {2020}
}

@InProceedings{   Flener2003:esra,
  author        = {Flener, Pierre and Pearson, Justin and \AA{}gren, Magnus},
  booktitle     = {LOPSTR},
  isbn          = {3-540-22174-3},
  pages         = {214--232},
  series        = {LNCS 3018},
  title         = {Introducing {ESRA}, a Relational Language for Modelling
                  Combinatorial Problems},
  doi           = {10.1007/978-3-540-25938-1_18},
  year          = {2003}
}

@InProceedings{   Akgun2019:instance,
  author        = {Akg{\"u}n, {\"O}zg{\"u}r and Dang, Nguyen and Miguel, Ian and
                  Salamon, Andr{\'a}s Z. and Stone, Christopher},
  title         = {Instance generation via generator instances},
  booktitle     = {CP},
  pages         = {3--19},
  series        = {LNCS 11802},
  doi           = {10.1007/978-3-030-30048-7_1},
  year          = {2019}
}

@InProceedings{   Akgun2020:discriminating,
  author        = "Akg{\"u}n, {\"O}zg{\"u}r and Dang, Nguyen and Miguel, Ian
                  and Salamon, Andr{\'a}s Z. and Spracklen, Patrick and
                  Stone, Christopher",
  doi           = {10.1007/978-3-030-58942-4_3},
  orig-editor   = "Hebrard, Emmanuel and Musliu, Nysret",
  title         = "Discriminating Instance Generation from Abstract
                  Specifications: A Case Study with {CP} and {MIP}",
  orig-booktitle= "Integration of Constraint Programming, Artificial
                  Intelligence, and Operations Research",
  booktitle     = {CPAIOR},
  series        = {LNCS 12296},
  year          = "2020",
  pages         = "41--51",
  abstract      = "We extend automatic instance generation methods to allow
                  cross-paradigm comparisons. We demonstrate that it is
                  possible to completely automate the search for benchmark
                  instances that help to discriminate between solvers. Our
                  system starts from a high level human-provided problem
                  specification, which is translated into a specification for
                  valid instances. We use the automated algorithm
                  configuration tool irace to search for instances, which are
                  translated into inputs for both MIP and CP solvers by means
                  of the Conjure, Savile Row, and MiniZinc tools. These
                  instances are then solved by CPLEX and Chuffed,
                  respectively. We constrain our search for instances by
                  requiring them to exhibit a significant advantage for MIP
                  over CP, or vice versa. Experimental results on four
                  optimisation problem classes demonstrate the effectiveness
                  of our method in identifying instances that highlight
                  differences in performance of the two solvers.",
  isbn          = "978-3-030-58942-4"
}

@book{OPLBook,
  address = {Cambridge, MA, USA},
  author = {{Van Hentenryck}, Pascal},
  isbn = {0-262-72030-2},
  publisher = {MIT Press},
  title = {{The OPL Optimization Programming Language}},
  year = {1999},
}

@inproceedings{ZincModref10,
  author = {Koninck, Leslie De and Brand, Sebastian and Stuckey, Peter J},
  booktitle = {Proceedings of the 9th International Workshop on Reformulating Constraint Satisfaction Problems},
  title = {{Data Independent Type Reduction for Zinc}},
  year = {2010},
}

@InProceedings{10.1007/978-3-319-40530-8_7,
author="Bak, Christopher
and Plump, Detlef",
editor="Echahed, Rachid
and Minas, Mark",
title="Compiling Graph Programs to {C}",
booktitle="Graph Transformation",
year="2016",
publisher="Springer",
orig-address="Cham",
pages="102--117",
abstract="We show how to generate efficient C code for a high-level domain-specific language for graphs. The experimental language GP 2 is based on graph transformation rules and aims to facilitate formal reasoning on programs. Implementing graph programs is challenging because rule matching is expensive in general. GP 2 addresses this problem by providing rooted rules which under mild conditions can be matched in constant time. Using a search plan, our compiler generates C code for matching rooted graph transformation rules. We present run-time experiments with our implementation in a case study on checking graphs for two-colourability: on grid graphs of up to 100,000 nodes, the compiled GP 2 program is as fast as the tailor-made C program given by Sedgewick.",
isbn="978-3-319-40530-8",
doi={10.1007/978-3-319-40530-8_7}
}

@incollection{mens2005use,
  title={On the use of graph transformations for model refactoring},
  author={Mens, Tom},
  booktitle={International Summer School on Generative and Transformational Techniques in Software Engineering},
  pages={219--257},
  year={2005},
  series={LNCS},
  volume={4143},
  doi={10.1007/11877028_7},
  publisher={Springer}
}

@inproceedings{qayum2009local,
  title={Local search-based refactoring as graph transformation},
  author={Qayum, Fawad and Heckel, Reiko},
  booktitle={1st International Symposium on Search Based Software Engineering},
  pages={43--46},
  year={2009},
  doi={10.1109/SSBSE.2009.27},
  publisher={IEEE}
}

@article{troya2022model,
  title={Model transformation testing and debugging: A survey},
  author={Troya, Javier and Segura, Sergio and Burgue{\~n}o, Lola and Wimmer, Manuel},
  journal={ACM Computing Surveys},
  volume={55},
  number={4},
  pages={1--39},
  year={2022},
  doi={10.1145/3523056},
  publisher={ACM New York, NY}
}

@article{2011-d3,
 title = {D3: Data-Driven Documents},
 author = {Michael Bostock AND Vadim Ogievetsky AND Jeffrey Heer},
 journal = {IEEE Trans. Visualization \& Comp. Graphics (Proc. InfoVis)},
 year = {2011},
 url = {http://idl.cs.washington.edu/papers/d3},
}

@book{bandits-book,
title={Bandit Algorithms},
publisher={Cambridge University Press},
author={Lattimore, Tor and Szepesvári, Csaba},
year={2020},
doi={10.1017/9781108571401}
}


@InProceedings{networkx,
  author =       {Aric A. Hagberg and Daniel A. Schult and Pieter J. Swart},
  title =        {Exploring Network Structure, Dynamics, and Function using {NetworkX}},
  booktitle =   {Proceedings of the 7th Python in Science Conference},
  pages =     {11--15},
  address = {Pasadena, CA USA},
  year =      {2008},
  editor =    {Ga\"el Varoquaux and Travis Vaught and Jarrod Millman},
  url={https://conference.scipy.org/proceedings/SciPy2008/paper_2/}
}

@inproceedings{jia2019taso,
  title={TASO: optimizing deep learning computation with automatic generation of graph substitutions},
  author={Jia, Zhihao and Padon, Oded and Thomas, James and Warszawski, Todd and Zaharia, Matei and Aiken, Alex},
  booktitle={Proceedings of the 27th ACM Symposium on Operating Systems Principles},
  pages={47--62},
  year={2019},
  doi={10.1145/3341301.3359630}
}