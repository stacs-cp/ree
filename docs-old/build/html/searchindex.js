Search.setIndex({"alltitles": {"Building the documentation": [[0, null]], "Contents:": [[2, null]], "EFormatConverters module": [[1, "module-EFormatConverters"]], "EFormatGraph module": [[1, "module-EFormatGraph"]], "Indices and tables": [[2, "indices-and-tables"]], "Submodules": [[1, "submodules"]], "Welcome to REE: Rewriting Essence Expressions\u2019s documentation!": [[2, null]], "eminigen module": [[1, "module-eminigen"]], "eminipyparser module": [[1, "module-eminipyparser"]], "gp2Graph module": [[1, "module-gp2Graph"]], "gp2Interface module": [[1, "module-gp2Interface"]], "greee package": [[1, null]], "icing module": [[1, "module-icing"]], "normalisers module": [[1, "module-normalisers"]]}, "docnames": ["building-docs", "greee", "index"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["building-docs.rst", "greee.rst", "index.rst"], "indexentries": {"addconstraint() (in module eminigen)": [[1, "eminigen.addConstraint", false]], "addedge() (gp2graph.gp2graph method)": [[1, "gp2Graph.GP2Graph.addEdge", false]], "addfind() (in module eminigen)": [[1, "eminigen.addFind", false]], "addletting() (in module eminigen)": [[1, "eminigen.addLetting", false]], "addnode() (gp2graph.gp2graph method)": [[1, "gp2Graph.GP2Graph.addNode", false]], "alledgesfrom() (eformatgraph.efgraph method)": [[1, "EFormatGraph.EFGraph.allEdgesFrom", false]], "allpathsfrom() (eformatgraph.efgraph method)": [[1, "EFormatGraph.EFGraph.allPathsFrom", false]], "alltransformsonspec_u() (in module gp2interface)": [[1, "gp2Interface.allTransformsOnSpec_u", false]], "astpytoemini() (in module eformatconverters)": [[1, "EFormatConverters.ASTpyToEmini", false]], "astpytogp2graph() (in module eformatconverters)": [[1, "EFormatConverters.ASTpyToGP2Graph", false]], "astpytojson() (in module eformatconverters)": [[1, "EFormatConverters.ASTpyToJson", false]], "astpytonx() (in module eformatconverters)": [[1, "EFormatConverters.ASTpyToNX", false]], "asttoessence() (in module icing)": [[1, "icing.ASTtoEssence", false]], "binaryexpress() (in module eminigen)": [[1, "eminigen.binaryExpress", false]], "binaryexpression (class in eminipyparser)": [[1, "eminipyparser.BinaryExpression", false]], "boolconstant (class in eminipyparser)": [[1, "eminipyparser.BoolConstant", false]], "booldomain (class in eminipyparser)": [[1, "eminipyparser.BoolDomain", false]], "build_expression_tree() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.build_expression_tree", false]], "checkunaryoperator() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.checkUnaryOperator", false]], "compareexpression() (in module normalisers)": [[1, "normalisers.compareExpression", false]], "comparestatements() (in module normalisers)": [[1, "normalisers.compareStatements", false]], "compilegp2folder() (in module gp2interface)": [[1, "gp2Interface.compileGP2folder", false]], "compilegp2program() (in module gp2interface)": [[1, "gp2Interface.compileGP2Program", false]], "consume() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.consume", false]], "domainnamelettingstatement (class in eminipyparser)": [[1, "eminipyparser.DomainNameLettingStatement", false]], "efgraph (class in eformatgraph)": [[1, "EFormatGraph.EFGraph", false]], "eformatconverters": [[1, "module-EFormatConverters", false]], "eformatgraph": [[1, "module-EFormatGraph", false]], "eminigen": [[1, "module-eminigen", false]], "eminipyparser": [[1, "module-eminipyparser", false]], "eminitoastpy() (in module eformatconverters)": [[1, "EFormatConverters.EminiToASTpy", false]], "essenceparser (class in eminipyparser)": [[1, "eminipyparser.EssenceParser", false]], "eulertour() (eformatgraph.efgraph method)": [[1, "EFormatGraph.EFGraph.eulerTour", false]], "expression (class in eminipyparser)": [[1, "eminipyparser.Expression", false]], "expression() (in module eminigen)": [[1, "eminigen.expression", false]], "expressioninordertraversal() (in module icing)": [[1, "icing.expressionInOrderTraversal", false]], "findstatement (class in eminipyparser)": [[1, "eminipyparser.FindStatement", false]], "formtoform() (eformatgraph.efgraph method)": [[1, "EFormatGraph.EFGraph.FormToForm", false]], "functests() (in module eformatgraph)": [[1, "EFormatGraph.funcTests", false]], "functionconstant (class in eminipyparser)": [[1, "eminipyparser.FunctionConstant", false]], "functiondomain (class in eminipyparser)": [[1, "eminipyparser.FunctionDomain", false]], "functionitem (class in eminipyparser)": [[1, "eminipyparser.FunctionItem", false]], "getnxtree() (in module eminipyparser)": [[1, "eminipyparser.getNXTree", false]], "givenstatement (class in eminipyparser)": [[1, "eminipyparser.GivenStatement", false]], "gp2graph": [[1, "module-gp2Graph", false]], "gp2graph (class in gp2graph)": [[1, "gp2Graph.GP2Graph", false]], "gp2graphtogp2string() (in module eformatconverters)": [[1, "EFormatConverters.GP2GraphToGP2String", false]], "gp2graphtogp2stringb() (in module eformatconverters)": [[1, "EFormatConverters.GP2GraphToGP2StringB", false]], "gp2graphtogp2stringdt() (in module eformatconverters)": [[1, "EFormatConverters.GP2GraphToGP2StringDT", false]], "gp2graphtonx() (in module eformatconverters)": [[1, "EFormatConverters.GP2GraphToNX", false]], "gp2interface": [[1, "module-gp2Interface", false]], "gp2stringbtonx() (in module eformatconverters)": [[1, "EFormatConverters.GP2StringBToNX", false]], "gp2stringdttonx() (in module eformatconverters)": [[1, "EFormatConverters.GP2StringDTToNX", false]], "gp2stringtogp2graph() (in module eformatconverters)": [[1, "EFormatConverters.GP2StringToGP2Graph", false]], "heuristicchinesepostman() (eformatgraph.efgraph method)": [[1, "EFormatGraph.EFGraph.heuristicChinesePostman", false]], "iceconstants() (in module icing)": [[1, "icing.iceConstants", false]], "iceconstraints() (in module icing)": [[1, "icing.iceConstraints", false]], "icedomain() (in module icing)": [[1, "icing.iceDomain", false]], "iceexpression() (in module icing)": [[1, "icing.iceExpression", false]], "icefind() (in module icing)": [[1, "icing.iceFind", false]], "icegivenparameter() (in module icing)": [[1, "icing.iceGivenParameter", false]], "icelettingconstant() (in module icing)": [[1, "icing.iceLettingConstant", false]], "icelettingdomain() (in module icing)": [[1, "icing.iceLettingDomain", false]], "icelocalvariables() (in module icing)": [[1, "icing.iceLocalVariables", false]], "icememberexpression() (in module icing)": [[1, "icing.iceMemberExpression", false]], "icequantifier() (in module icing)": [[1, "icing.iceQuantifier", false]], "icestatement() (in module icing)": [[1, "icing.iceStatement", false]], "icesuchthat() (in module icing)": [[1, "icing.iceSuchThat", false]], "icewhere() (in module icing)": [[1, "icing.iceWhere", false]], "icing": [[1, "module-icing", false]], "intconstant (class in eminipyparser)": [[1, "eminipyparser.IntConstant", false]], "intdomain (class in eminipyparser)": [[1, "eminipyparser.IntDomain", false]], "is_expression_terminator() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.is_expression_terminator", false]], "is_program_compiled() (in module gp2interface)": [[1, "gp2Interface.is_program_compiled", false]], "jsontoastpy() (in module eformatconverters)": [[1, "EFormatConverters.JsonToASTpy", false]], "match() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.match", false]], "match_any() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.match_any", false]], "memberexpression (class in eminipyparser)": [[1, "eminipyparser.MemberExpression", false]], "module": [[1, "module-EFormatConverters", false], [1, "module-EFormatGraph", false], [1, "module-eminigen", false], [1, "module-eminipyparser", false], [1, "module-gp2Graph", false], [1, "module-gp2Interface", false], [1, "module-icing", false], [1, "module-normalisers", false]], "namelettingstatement (class in eminipyparser)": [[1, "eminipyparser.NameLettingStatement", false]], "needsparenthesis() (in module icing)": [[1, "icing.needsParenthesis", false]], "node (class in eminipyparser)": [[1, "eminipyparser.Node", false]], "normaliseastpy() (in module normalisers)": [[1, "normalisers.normaliseASTpy", false]], "normalisers": [[1, "module-normalisers", false]], "nxtoastpy() (in module eformatconverters)": [[1, "EFormatConverters.NXToASTpy", false]], "nxtogp2graph() (in module eformatconverters)": [[1, "EFormatConverters.NXToGP2Graph", false]], "parse() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse", false]], "parse_constant() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_constant", false]], "parse_domain() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_domain", false]], "parse_domain_name_letting_statement() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_domain_name_letting_statement", false]], "parse_expression() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_expression", false]], "parse_find_statement() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_find_statement", false]], "parse_function_attribute() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_function_attribute", false]], "parse_function_constant() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_function_constant", false]], "parse_function_item() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_function_item", false]], "parse_given_statement() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_given_statement", false]], "parse_literal() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_literal", false]], "parse_name_letting_statement() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_name_letting_statement", false]], "parse_quantification() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_quantification", false]], "parse_relation_attribute() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_relation_attribute", false]], "parse_relation_constant() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_relation_constant", false]], "parse_set_attribute() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_set_attribute", false]], "parse_set_constant() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_set_constant", false]], "parse_statement() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_statement", false]], "parse_such_that_statement() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_such_that_statement", false]], "parse_tuple_constant() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_tuple_constant", false]], "parse_where_statement() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.parse_where_statement", false]], "postmantest() (in module eformatgraph)": [[1, "EFormatGraph.postMantest", false]], "precedence() (in module icing)": [[1, "icing.precedence", false]], "printtree() (in module eminipyparser)": [[1, "eminipyparser.printTree", false]], "quantificationexpression (class in eminipyparser)": [[1, "eminipyparser.QuantificationExpression", false]], "relationconstant (class in eminipyparser)": [[1, "eminipyparser.RelationConstant", false]], "relationdomain (class in eminipyparser)": [[1, "eminipyparser.RelationDomain", false]], "removecomments() (eminipyparser.essenceparser method)": [[1, "eminipyparser.EssenceParser.removeComments", false]], "reorder() (in module normalisers)": [[1, "normalisers.reOrder", false]], "runprecompiledprog() (in module gp2interface)": [[1, "gp2Interface.runPrecompiledProg", false]], "scanprecompiledprograms() (in module gp2interface)": [[1, "gp2Interface.scanPrecompiledPrograms", false]], "scanprograms() (in module gp2interface)": [[1, "gp2Interface.scanPrograms", false]], "setconstant (class in eminipyparser)": [[1, "eminipyparser.SetConstant", false]], "setdomain (class in eminipyparser)": [[1, "eminipyparser.SetDomain", false]], "spawnessence() (in module eminigen)": [[1, "eminigen.spawnEssence", false]], "suchthatstatement (class in eminipyparser)": [[1, "eminipyparser.SuchThatStatement", false]], "timedcycle() (eformatgraph.efgraph method)": [[1, "EFormatGraph.EFGraph.timedCycle", false]], "timedcyclestours() (eformatgraph.efgraph method)": [[1, "EFormatGraph.EFGraph.timedCyclesTours", false]], "timedeulertour() (eformatgraph.efgraph method)": [[1, "EFormatGraph.EFGraph.TimedEulerTour", false]], "timedformtoform() (eformatgraph.efgraph method)": [[1, "EFormatGraph.EFGraph.timedFormToForm", false]], "toessencehelper() (in module gp2graph)": [[1, "gp2Graph.ToEssenceHelper", false]], "togp2helper() (in module gp2graph)": [[1, "gp2Graph.ToGP2Helper", false]], "transformspec_u() (in module gp2interface)": [[1, "gp2Interface.transformSpec_u", false]], "treeequality() (in module eminipyparser)": [[1, "eminipyparser.treeEquality", false]], "tupleconstant (class in eminipyparser)": [[1, "eminipyparser.TupleConstant", false]], "tupledomain (class in eminipyparser)": [[1, "eminipyparser.TupleDomain", false]], "unaryexpression (class in eminipyparser)": [[1, "eminipyparser.UnaryExpression", false]], "wherestatement (class in eminipyparser)": [[1, "eminipyparser.WhereStatement", false]]}, "objects": {"": [[1, 0, 0, "-", "EFormatConverters"], [1, 0, 0, "-", "EFormatGraph"], [1, 0, 0, "-", "eminigen"], [1, 0, 0, "-", "eminipyparser"], [1, 0, 0, "-", "gp2Graph"], [1, 0, 0, "-", "gp2Interface"], [1, 0, 0, "-", "icing"], [1, 0, 0, "-", "normalisers"]], "EFormatConverters": [[1, 1, 1, "", "ASTpyToEmini"], [1, 1, 1, "", "ASTpyToGP2Graph"], [1, 1, 1, "", "ASTpyToJson"], [1, 1, 1, "", "ASTpyToNX"], [1, 1, 1, "", "EminiToASTpy"], [1, 1, 1, "", "GP2GraphToGP2String"], [1, 1, 1, "", "GP2GraphToGP2StringB"], [1, 1, 1, "", "GP2GraphToGP2StringDT"], [1, 1, 1, "", "GP2GraphToNX"], [1, 1, 1, "", "GP2StringBToNX"], [1, 1, 1, "", "GP2StringDTToNX"], [1, 1, 1, "", "GP2StringToGP2Graph"], [1, 1, 1, "", "JsonToASTpy"], [1, 1, 1, "", "NXToASTpy"], [1, 1, 1, "", "NXToGP2Graph"]], "EFormatGraph": [[1, 2, 1, "", "EFGraph"], [1, 1, 1, "", "funcTests"], [1, 1, 1, "", "postMantest"]], "EFormatGraph.EFGraph": [[1, 3, 1, "", "FormToForm"], [1, 3, 1, "", "TimedEulerTour"], [1, 3, 1, "", "allEdgesFrom"], [1, 3, 1, "", "allPathsFrom"], [1, 3, 1, "", "eulerTour"], [1, 3, 1, "", "heuristicChinesePostman"], [1, 3, 1, "", "timedCycle"], [1, 3, 1, "", "timedCyclesTours"], [1, 3, 1, "", "timedFormToForm"]], "eminigen": [[1, 1, 1, "", "addConstraint"], [1, 1, 1, "", "addFind"], [1, 1, 1, "", "addLetting"], [1, 1, 1, "", "binaryExpress"], [1, 1, 1, "", "expression"], [1, 1, 1, "", "spawnEssence"]], "eminipyparser": [[1, 2, 1, "", "BinaryExpression"], [1, 2, 1, "", "BoolConstant"], [1, 2, 1, "", "BoolDomain"], [1, 2, 1, "", "DomainNameLettingStatement"], [1, 2, 1, "", "EssenceParser"], [1, 2, 1, "", "Expression"], [1, 2, 1, "", "FindStatement"], [1, 2, 1, "", "FunctionConstant"], [1, 2, 1, "", "FunctionDomain"], [1, 2, 1, "", "FunctionItem"], [1, 2, 1, "", "GivenStatement"], [1, 2, 1, "", "IntConstant"], [1, 2, 1, "", "IntDomain"], [1, 2, 1, "", "MemberExpression"], [1, 2, 1, "", "NameLettingStatement"], [1, 2, 1, "", "Node"], [1, 2, 1, "", "QuantificationExpression"], [1, 2, 1, "", "RelationConstant"], [1, 2, 1, "", "RelationDomain"], [1, 2, 1, "", "SetConstant"], [1, 2, 1, "", "SetDomain"], [1, 2, 1, "", "SuchThatStatement"], [1, 2, 1, "", "TupleConstant"], [1, 2, 1, "", "TupleDomain"], [1, 2, 1, "", "UnaryExpression"], [1, 2, 1, "", "WhereStatement"], [1, 1, 1, "", "getNXTree"], [1, 1, 1, "", "printTree"], [1, 1, 1, "", "treeEquality"]], "eminipyparser.EssenceParser": [[1, 3, 1, "", "build_expression_tree"], [1, 3, 1, "", "checkUnaryOperator"], [1, 3, 1, "", "consume"], [1, 3, 1, "", "is_expression_terminator"], [1, 3, 1, "", "match"], [1, 3, 1, "", "match_any"], [1, 3, 1, "", "parse"], [1, 3, 1, "", "parse_constant"], [1, 3, 1, "", "parse_domain"], [1, 3, 1, "", "parse_domain_name_letting_statement"], [1, 3, 1, "", "parse_expression"], [1, 3, 1, "", "parse_find_statement"], [1, 3, 1, "", "parse_function_attribute"], [1, 3, 1, "", "parse_function_constant"], [1, 3, 1, "", "parse_function_item"], [1, 3, 1, "", "parse_given_statement"], [1, 3, 1, "", "parse_literal"], [1, 3, 1, "", "parse_name_letting_statement"], [1, 3, 1, "", "parse_quantification"], [1, 3, 1, "", "parse_relation_attribute"], [1, 3, 1, "", "parse_relation_constant"], [1, 3, 1, "", "parse_set_attribute"], [1, 3, 1, "", "parse_set_constant"], [1, 3, 1, "", "parse_statement"], [1, 3, 1, "", "parse_such_that_statement"], [1, 3, 1, "", "parse_tuple_constant"], [1, 3, 1, "", "parse_where_statement"], [1, 3, 1, "", "removeComments"]], "gp2Graph": [[1, 2, 1, "", "GP2Graph"], [1, 1, 1, "", "ToEssenceHelper"], [1, 1, 1, "", "ToGP2Helper"]], "gp2Graph.GP2Graph": [[1, 3, 1, "", "addEdge"], [1, 3, 1, "", "addNode"]], "gp2Interface": [[1, 1, 1, "", "allTransformsOnSpec_u"], [1, 1, 1, "", "compileGP2Program"], [1, 1, 1, "", "compileGP2folder"], [1, 1, 1, "", "is_program_compiled"], [1, 1, 1, "", "runPrecompiledProg"], [1, 1, 1, "", "scanPrecompiledPrograms"], [1, 1, 1, "", "scanPrograms"], [1, 1, 1, "", "transformSpec_u"]], "icing": [[1, 1, 1, "", "ASTtoEssence"], [1, 1, 1, "", "expressionInOrderTraversal"], [1, 1, 1, "", "iceConstants"], [1, 1, 1, "", "iceConstraints"], [1, 1, 1, "", "iceDomain"], [1, 1, 1, "", "iceExpression"], [1, 1, 1, "", "iceFind"], [1, 1, 1, "", "iceGivenParameter"], [1, 1, 1, "", "iceLettingConstant"], [1, 1, 1, "", "iceLettingDomain"], [1, 1, 1, "", "iceLocalVariables"], [1, 1, 1, "", "iceMemberExpression"], [1, 1, 1, "", "iceQuantifier"], [1, 1, 1, "", "iceStatement"], [1, 1, 1, "", "iceSuchThat"], [1, 1, 1, "", "iceWhere"], [1, 1, 1, "", "needsParenthesis"], [1, 1, 1, "", "precedence"]], "normalisers": [[1, 1, 1, "", "compareExpression"], [1, 1, 1, "", "compareStatements"], [1, 1, 1, "", "normaliseASTpy"], [1, 1, 1, "", "reOrder"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"2": 1, "A": 1, "At": 1, "It": 1, "The": 1, "To": [0, 1], "abstract": 1, "add": 1, "addconstraint": 1, "addedg": 1, "addfind": 1, "addict": 1, "addlet": 1, "addnod": 1, "aim": 1, "all": 1, "alledgesfrom": 1, "allpathsfrom": 1, "alltransformsonspec_u": 1, "alreadi": 1, "an": 1, "ani": 1, "anoth": 1, "appli": 1, "ar": 1, "arg": 1, "argument": 1, "arithmet": 1, "associ": 1, "ast": 1, "astpi": 1, "astpytoemini": 1, "astpytogp2graph": 1, "astpytojson": 1, "astpytonx": 1, "asttoess": 1, "attribut": 1, "automat": 1, "avail": 1, "back": 1, "base": 1, "basic": 1, "between": 1, "binari": 1, "binaryexpress": 1, "bool": 1, "boolconst": 1, "booldomain": 1, "branch": 1, "build": 2, "build_expression_tre": 1, "c": 1, "callabl": 1, "can": 1, "categori": 1, "caus": 1, "check": 1, "checkunaryoper": 1, "child": 1, "children": 1, "chines": 1, "chosen": 1, "circuit": 1, "class": 1, "classifi": 1, "close": 1, "code": 1, "comment": 1, "compareexpress": 1, "comparestat": 1, "compil": 1, "compilegp2fold": 1, "compilegp2program": 1, "comput": 1, "consol": 1, "constant": 1, "constraint": 1, "consum": 1, "contain": 1, "content": 1, "context": 1, "convers": 1, "convert": 1, "copi": 1, "cost": 1, "covert": 1, "creat": 1, "current": 1, "cycl": 1, "deal": 1, "decis": 1, "default": 1, "deprec": 1, "depth": 1, "descript": 1, "desir": 1, "determin": 1, "digraph": 1, "directori": 1, "doc": 0, "domain": 1, "domainnamelettingstat": 1, "down": 1, "draw": 1, "each": 1, "edg": 1, "edgefrom": 1, "edgeto": 1, "efgraph": 1, "eformatconvert": 2, "eformatgraph": 2, "element": 1, "elid": 1, "emini": 1, "eminigen": 2, "eminipypars": 2, "eminitoastpi": 1, "empti": 1, "encound": 1, "end": 1, "essenc": 1, "essencepars": 1, "essencespec": 1, "esssenc": 1, "euler": 1, "eulerian": 1, "eulertour": 1, "execut": 1, "exp1": 1, "exp2": 1, "expect": 1, "express": 1, "expressioninordertravers": 1, "extend": 1, "extra": 1, "extract": 1, "fals": 1, "file": 1, "find": 1, "findstat": 1, "first": 1, "flag": 1, "folder": [0, 1], "follow": 1, "form": 1, "format": 1, "format1toformat2": 1, "formtoform": 1, "found": 1, "from": [0, 1], "fromform": 1, "full": 1, "func": 1, "functest": 1, "function": 1, "functionconst": 1, "functiondomain": 1, "functionitem": 1, "gener": 1, "getnxtre": 1, "given": 1, "givenstat": 1, "gp2": 1, "gp2graph": 2, "gp2graphtogp2str": 1, "gp2graphtogp2stringb": 1, "gp2graphtogp2stringdt": 1, "gp2graphtonx": 1, "gp2interfac": 2, "gp2prog_file_nam": 1, "gp2run": 1, "gp2string": 1, "gp2stringb": 1, "gp2stringbtonx": 1, "gp2stringdt": 1, "gp2stringdttonx": 1, "gp2stringtogp2graph": 1, "grab": 1, "graph": 1, "greee": 2, "group": 1, "grpah": 1, "h": 1, "have": 1, "helper": 1, "heurist": 1, "heuristicchinesepostman": 1, "host": 1, "html": 0, "i": 1, "ic": 2, "iceconst": 1, "iceconstraint": 1, "icedomain": 1, "iceexpress": 1, "icefind": 1, "icegivenparamet": 1, "icelettingconst": 1, "icelettingdomain": 1, "icelocalvari": 1, "icememberexpress": 1, "icequantifi": 1, "icestat": 1, "icesuchthat": 1, "icewher": 1, "id": 1, "ident": 1, "identifi": 1, "indent": 1, "index": [1, 2], "indic": 1, "infer": 1, "info": 1, "inform": 1, "initi": 1, "input": 1, "inputexp": 1, "inputtoken": 1, "insid": 1, "int": 1, "intconst": 1, "intdomain": 1, "integ": 1, "interact": 1, "intermedi": 1, "intern": 1, "is_expression_termin": 1, "is_program_compil": 1, "issu": 1, "its": 1, "json": 1, "jsonstr": 1, "jsontoastpi": 1, "just": 1, "label": 1, "label_ful": 1, "last": 1, "lead": 1, "least": 1, "left": 1, "let": 1, "lexic": 1, "lib": 1, "like": 1, "limit": 1, "list": 1, "liter": 1, "local": 1, "lot": 1, "lower": 1, "maintain": 1, "make": [0, 1], "man": 1, "map": 1, "match": 1, "match_ani": 1, "maxsiz": 1, "member": 1, "memberexpress": 1, "merg": 1, "method": 1, "mini": 1, "minsiz": 1, "modul": 2, "more": 1, "must": 1, "name": 1, "namelettingstat": 1, "nb": 1, "need": 1, "needsparenthesi": 1, "nest": 1, "networkx": 1, "node": 1, "none": 1, "normal": 1, "normalis": 2, "normaliseastpi": 1, "number": 1, "nx": 1, "nxgraph": 1, "nxtoastpi": 1, "nxtogp2graph": 1, "object": 1, "ok": 1, "onc": 1, "one": 1, "onli": 1, "op": 1, "oper": 1, "option": 1, "order": 1, "origin": 1, "other": 1, "output_queu": 1, "over": 1, "packag": 2, "page": 2, "pair": 1, "paramet": 1, "parent": 1, "parenthesi": 1, "pars": 1, "parse_const": 1, "parse_domain": 1, "parse_domain_name_letting_stat": 1, "parse_express": 1, "parse_find_stat": 1, "parse_function_attribut": 1, "parse_function_const": 1, "parse_function_item": 1, "parse_given_stat": 1, "parse_liter": 1, "parse_name_letting_stat": 1, "parse_quantif": 1, "parse_relation_attribut": 1, "parse_relation_const": 1, "parse_set_attribut": 1, "parse_set_const": 1, "parse_stat": 1, "parse_such_that_stat": 1, "parse_tuple_const": 1, "parse_where_stat": 1, "parser": 1, "pass": 1, "path": 1, "pattern": 1, "perform": 1, "pick": 1, "placehold": 1, "point": 1, "poor": 1, "postfix": 1, "postfix_express": 1, "postman": 1, "postmantest": 1, "preced": 1, "preliminari": 1, "preposit": 1, "print": 1, "printinfo": 1, "printtre": 1, "probabl": 1, "problem": 1, "produc": 1, "prog_nam": 1, "program": 1, "provid": 1, "put": 1, "python": 1, "quadrupl": 1, "quantifi": 1, "quantificationexpress": 1, "quit": 1, "rais": 1, "random": 1, "raw": 1, "reachabl": 1, "realli": 1, "recurs": 1, "redund": 1, "relat": 1, "relationconst": 1, "relationdomain": 1, "remov": 1, "removecom": 1, "reorder": 1, "represent": 1, "respect": 1, "return": 1, "right": 1, "root": 1, "rule": 1, "run": [0, 1], "runprecompiledprog": 1, "safe": 1, "same": 1, "scanprecompiledprogram": 1, "scanprogram": 1, "script": 1, "search": [1, 2], "second": 1, "semant": 1, "set": 1, "setconst": 1, "setdomain": 1, "shortest": 1, "should": 1, "size": 1, "small": 1, "solv": 1, "some": 1, "sort": 1, "sourc": 1, "spacer": 1, "spawness": 1, "spec": 1, "specif": 1, "specnam": 1, "splitter": 1, "stack": 1, "start": 1, "statement": 1, "step": 1, "str": 1, "string": 1, "strip": 1, "submodul": 2, "subopt": 1, "substr": 1, "subtre": 1, "subtree1": 1, "subtree2": 1, "suchthatstat": 1, "sugar": 1, "symbol": 1, "syntact": 1, "syntax": 1, "take": 1, "target": 1, "templat": 1, "termin": 1, "test": 1, "text": 1, "than": 1, "them": 1, "thi": 1, "time": 1, "timedcycl": 1, "timedcyclestour": 1, "timedeulertour": 1, "timedformtoform": 1, "titl": 1, "toessencehelp": 1, "toform": 1, "togeth": 1, "togp2help": 1, "token": 1, "transform": 1, "transformspec_u": 1, "translat": 1, "travers": 1, "tree": 1, "treeequal": 1, "true": 1, "tupl": 1, "tupleconst": 1, "tupledomain": 1, "turn": 1, "type": 1, "unari": 1, "unaryexpress": 1, "uncompil": 1, "unnam": 1, "upper": 1, "us": 1, "valu": 1, "valueerror": 1, "variabl": 1, "veri": 1, "vertex": 1, "vertic": 1, "via": 1, "wai": 1, "we": 1, "when": 1, "where": 1, "wherestat": 1, "while": 1, "word": 1, "x": 1, "y": 1}, "titles": ["Building the documentation", "greee package", "Welcome to REE: Rewriting Essence Expressions\u2019s documentation!"], "titleterms": {"": 2, "build": 0, "content": 2, "document": [0, 2], "eformatconvert": 1, "eformatgraph": 1, "eminigen": 1, "eminipypars": 1, "essenc": 2, "express": 2, "gp2graph": 1, "gp2interfac": 1, "greee": 1, "ic": 1, "indic": 2, "modul": 1, "normalis": 1, "packag": 1, "ree": 2, "rewrit": 2, "submodul": 1, "tabl": 2, "welcom": 2}})