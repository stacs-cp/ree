Main = fromCountingRelToFunctionsAndSets


fromCountingRelToFunctionsAndSets(specName,decisionVariableName:string;lettingPos:int)
[
    // nodes that will be turned into function, Root, FindStatement and DecisionVariable preserved
    // DecisionVariableType becomes function
    // we need to check that there is a quantifier over the decision variable
    (n0, specName)
    (n1, "find")
    (n2, decisionVariableName)
    (n3, "relation")
    (n1003, "RelationDomain")

|
    (e1, n0, n1, lettingPos)
    (e2, n1, n2, 1)
    (e3, n2, n3, 1)
    (e1003, n3,n1003, "info")   



]



=>


[
    (n0, specName)
    (n1, "find")
    (n2, decisionVariableName)
    // Function that replaces Relation
    (n3, "function")
    (n1003, "FunctionDomain")




    |
    (e1, n0, n1, lettingPos)
    (e2, n1, n2, 1)
    (e3, n2, n3, 1)
    (e1003, n3,n1003, "info")   


]
interface =
{
  n0,n1, n2, n3
}