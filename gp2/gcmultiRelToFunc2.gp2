Main = fromCountingRelToFunctionsAndSets;expand!


fromCountingRelToFunctionsAndSets(specName,decisionVariableName:string;findPos:int)
[
     // DecisionVariableType becomes function

    (n0, specName)
    (n1, "find")
    (n2, decisionVariableName)
    (n3, "relation")
|
    (e1, n0, n1, findPos)
    (e2, n1, n2, 1)
    (e3, n2, n3, 1)
]
=>
[
    (n0, specName)
    (n1, "find")
    (n2, decisionVariableName)
    (n3, "relation"# red)
|
    (e1, n0, n1, findPos)
    (e2, n1, n2, 1)
    (e3, n2, n3, 1)
]
interface =
{
  n0,n1, n2, n3
}

expand(x,y:string; n:int) 
[ 
(n0, x # red) 
(n1, y) 
| 
(e1, n0, n1, n) 
] 
=> 
[ 
(n0, x # red) 
(n1, y # red) 
| 
(e1, n0, n1, n) 
]
interface = {n0, n1}

delete(x,y:string; n:int)
[ 
(n0, x # red) 
(n1, y # red) 
| 
(e1, n0, n1, n) 
] 
=> 
[ 
(n0, x # red) 
| 
]
interface = {n0}
